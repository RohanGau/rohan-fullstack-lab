name: Docker Build & Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v3

      - name: üî¢ Set NODE_ENV based on Branch
        id: env
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "GITHUB_REF=$GITHUB_REF"
          if [ "$GITHUB_REF" = "refs/heads/main" ]; then
            echo "NODE_ENV=production" >> $GITHUB_ENV
            echo "env_file=.env.production" >> $GITHUB_ENV
          elif [ "$GITHUB_REF" = "refs/heads/develop" ]; then
            echo "NODE_ENV=stage" >> $GITHUB_ENV
            echo "env_file=.env.stage" >> $GITHUB_ENV
          else
            echo "NODE_ENV=development" >> $GITHUB_ENV
            echo "env_file=.env" >> $GITHUB_ENV
          fi

      - name: üêõ Print Environment
        run: |
          echo "NODE_ENV = $NODE_ENV"
          echo "env_file = $env_file"

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üöß Build Docker Image with Tag
        run: |
          if [ "$NODE_ENV" = "stage" ]; then
            IMAGE_TAG=node-backend:stage-latest
          else
            IMAGE_TAG=node-backend:${NODE_ENV}-${SHORT_SHA}
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Building Image: $IMAGE_TAG"
          docker build -t $IMAGE_TAG ./apps/api

      - name: üåê Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üì¶ Push Tagged Image
        run: |
          echo "Pushing: ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG"
          docker tag $IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG
